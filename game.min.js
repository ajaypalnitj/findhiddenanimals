import{ANIMALS,Progress}from"./animals/config.js";class CowGame{constructor(){this.currentAnimal=localStorage.getItem("currentAnimal")||"cow",ANIMALS[this.currentAnimal]||(console.warn(`Invalid animal ${this.currentAnimal}, defaulting to cow`),this.currentAnimal="cow",localStorage.setItem("currentAnimal","cow")),this.isPlaying=!1,this.startTime=0,this.timerInterval=null,this.score=0,this.highScore=localStorage.getItem("highScore")||0,this.totalFinds=localStorage.getItem("totalFinds")||0,this.currentStreak=parseInt(localStorage.getItem("currentStreak"))||0,this.bestStreak=parseInt(localStorage.getItem("bestStreak"))||0,this.cowPosition={x:0,y:0},this.sounds={bell:null,found:null},this.gameArea=document.getElementById("game-area"),this.startButton=document.getElementById("start-game"),this.playAgainButton=document.getElementById("play-again"),this.winMessage=document.getElementById("win-message"),this.scoreElement=document.getElementById("score"),this.highScoreElement=document.getElementById("high-score"),this.timeElement=document.getElementById("time"),this.totalFindsElement=document.getElementById("total-finds"),this.changeAnimalButton=document.getElementById("change-animal"),this.highScoreElement.textContent=this.highScore,this.totalFindsElement.textContent=this.totalFinds,this.difficultyLevels={easy:{searchRadius:70,scoreMultiplier:1},medium:{searchRadius:50,scoreMultiplier:1.5},hard:{searchRadius:30,scoreMultiplier:2}},this.currentDifficulty="medium";const t=async()=>{this.audioContext||await this.initializeAudio().catch(console.error),this.startButton.removeEventListener("click",t),this.gameArea.removeEventListener("click",t)};this.startButton.addEventListener("click",t),this.gameArea.addEventListener("click",t),this.startButton.addEventListener("click",(()=>this.startGame())),this.playAgainButton.addEventListener("click",(()=>this.startGame())),this.gameArea.addEventListener("click",(t=>this.handleClick(t))),this.changeAnimalButton.addEventListener("click",(()=>this.showAnimalSelection())),window.addEventListener("resize",(()=>this.handleResize())),document.querySelector(".twitter").addEventListener("click",(()=>this.shareOnTwitter())),document.querySelector(".facebook").addEventListener("click",(()=>this.shareOnFacebook())),document.querySelector(".copy-link").addEventListener("click",(()=>this.copyLink())),this.cow=document.createElement("img");try{if(!ANIMALS[this.currentAnimal]||!ANIMALS[this.currentAnimal].sprite)throw new Error(`Sprite not found for ${this.currentAnimal}`);this.cow.src=ANIMALS[this.currentAnimal].sprite,this.cow.onerror=()=>{console.error(`Failed to load sprite for ${this.currentAnimal}`),this.cow.src="animals/cow/animal.png"}}catch(t){console.error("Error loading animal sprite:",t),this.cow.src="animals/cow/animal.png"}this.cow.className="cow",this.gameArea.appendChild(this.cow),this.initializeAnimalGrid()}handleResize(){if(this.isPlaying){const t=this.gameArea.getBoundingClientRect();this.cowPosition.x=Math.min(this.cowPosition.x,t.width-100),this.cowPosition.y=Math.min(this.cowPosition.y,t.height-100),this.cow.style.left=`${this.cowPosition.x}px`,this.cow.style.top=`${this.cowPosition.y}px`}}shareOnTwitter(){const t=this.getRandomFact(),e=`I just found the invisible cow with a score of ${this.score}! 🐮\n\nCow Fact: ${t}\n\nCan you beat my score?`;window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(e)}&url=${encodeURIComponent(window.location.href)}`)}shareOnFacebook(){document.querySelector('meta[property="og:title"]').setAttribute("content",`Find The Cow! - I scored ${this.score} points! Can you beat that?`),document.querySelector('meta[property="og:description"]').setAttribute("content",`I just found the invisible cow with a score of ${this.score}! 🐮 Play this fun sound-based browser game and try to beat my score!`),window.open("https://www.facebook.com/sharer/sharer.php?u="+encodeURIComponent("https://findhiddenanimals.com/"))}copyLink(){const t=this.getRandomFact(),e=`I just found the invisible cow with a score of ${this.score}! 🐮\n\nCow Fact: ${t}\n\nCan you beat my score? Play here: ${window.location.href}`;navigator.clipboard.writeText(e).then((()=>{const t=document.querySelector(".copy-link"),e=t.innerHTML;t.innerHTML='<i class="fas fa-check"></i> Copied!',setTimeout((()=>{t.innerHTML=e}),2e3)}))}async initializeAudio(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.gainNode=this.audioContext.createGain(),this.gainNode.connect(this.audioContext.destination),await this.loadAnimalSounds(this.currentAnimal)}catch(t){console.error("Error loading sounds:",t)}}async loadAnimalSounds(t){const e=ANIMALS[t],[i,n]=await Promise.all([fetch(e.sounds.bell),fetch(e.sounds.found)]);if(!i.ok||!n.ok)throw new Error("Failed to load sound files");const[s,o]=await Promise.all([i.arrayBuffer().then((t=>this.audioContext.decodeAudioData(t))),n.arrayBuffer().then((t=>this.audioContext.decodeAudioData(t)))]);this.sounds.bell=s,this.sounds.found=o}startGame(){this.isPlaying=!0,document.getElementById("start-screen").style.display="none",this.winMessage.style.display="none",this.score=1e3*this.difficultyLevels[this.currentDifficulty].scoreMultiplier,this.scoreElement.textContent=this.score,this.startTime=Date.now(),this.cow.onclick=()=>{!this.isPlaying&&this.audioContext&&this.sounds.found&&this.playSound(0,"found")},this.timerInterval&&clearInterval(this.timerInterval),this.timerInterval=setInterval((()=>{const t=Math.floor((Date.now()-this.startTime)/1e3);this.timeElement.textContent=t,this.score=Math.max(0,1e3*this.difficultyLevels[this.currentDifficulty].scoreMultiplier-t*(10*this.difficultyLevels[this.currentDifficulty].scoreMultiplier)),this.scoreElement.textContent=this.score}),1e3);const t=this.gameArea.getBoundingClientRect(),e=100;this.cowPosition={x:e+Math.random()*(t.width-200),y:e+Math.random()*(t.height-200)},this.cow.style.left=`${this.cowPosition.x}px`,this.cow.style.top=`${this.cowPosition.y}px`,this.cow.style.display="none",this.cow.style.transform="scale(1)"}handleClick(t){if(!this.isPlaying)return;const e=this.gameArea.getBoundingClientRect(),i=t.clientX-e.left,n=t.clientY-e.top;this.addClickFeedback(i,n);const s=Math.sqrt(Math.pow(i-(this.cowPosition.x+50),2)+Math.pow(n-(this.cowPosition.y+50),2));this.audioContext&&this.playSound(s);s<this.difficultyLevels[this.currentDifficulty].searchRadius?this.cowFound():this.resetStreak()}addClickFeedback(t,e){const i=document.createElement("div");i.className="click-feedback";const n=Math.sqrt(Math.pow(t-(this.cowPosition.x+50),2)+Math.pow(e-(this.cowPosition.y+50),2)),s=Math.sqrt(Math.pow(this.gameArea.clientWidth,2)+Math.pow(this.gameArea.clientHeight,2));n<.2*s?i.classList.add("very-hot"):n<.4*s?i.classList.add("hot"):n<.6*s?i.classList.add("warm"):i.classList.add("cold"),i.style.left=t-25+"px",i.style.top=e-25+"px",this.gameArea.appendChild(i),setTimeout((()=>{this.gameArea.removeChild(i)}),500)}playSound(t,e="bell"){if(!this.sounds[e])return;const i=this.audioContext.createBufferSource();i.buffer=this.sounds[e];const n=this.audioContext.createGain();if("bell"===e){const e=Math.sqrt(Math.pow(this.gameArea.clientWidth,2)+Math.pow(this.gameArea.clientHeight,2)),i=Math.min(t/e,1),s=3,o=ANIMALS[this.currentAnimal].difficulty.soundRange;let a=Math.pow(1-i,s);a=o.min+(o.max-o.min)*a,n.gain.value=a}else n.gain.value=1;return i.connect(n),n.connect(this.audioContext.destination),i.start(0),new Promise((t=>{i.onended=t}))}getRandomFact(){const t=ANIMALS[this.currentAnimal].facts;return t[Math.floor(Math.random()*t.length)]}async cowFound(){this.isPlaying=!1,clearInterval(this.timerInterval),this.cow.style.display="block",this.cow.style.transform="scale(2)",this.audioContext&&this.playSound(0,"found"),this.score>this.highScore&&(this.highScore=this.score,this.highScoreElement.textContent=this.highScore,localStorage.setItem("highScore",this.highScore)),this.currentStreak++,localStorage.setItem("currentStreak",this.currentStreak),this.currentStreak>this.bestStreak&&(this.bestStreak=this.currentStreak,localStorage.setItem("bestStreak",this.bestStreak));const t=Progress.incrementFinds(this.currentAnimal);document.getElementById("animal-finds").textContent=t,this.totalFinds++,this.totalFindsElement.textContent=this.totalFinds,localStorage.setItem("totalFinds",this.totalFinds);const e=Progress.getNextUnlock(),i=document.getElementById("unlock-notification");e&&Progress.isUnlocked(e.animal)?(document.getElementById("unlocked-animal").textContent=ANIMALS[e.animal].name,i.style.display="block"):i.style.display="none";this.winMessage.querySelector("h2").innerHTML=`You found the ${ANIMALS[this.currentAnimal].name}! 🎉<br>\n            Score: ${this.score}<br>\n            Streak: ${this.currentStreak} (Best: ${this.bestStreak})<br><br>\n            Fun Fact: ${this.getRandomFact()}`,this.winMessage.style.display="block",this.updateAnimalGrid(),this.audioContext&&this.playSound(0,"bell")}resetStreak(){this.currentStreak=0,localStorage.setItem("currentStreak",0)}showAnimalSelection(){const t=document.getElementById("start-screen"),e=document.getElementById("win-message");t.style.display="block",e.style.display="none",this.updateAnimalGrid()}initializeAnimalGrid(){const t=document.querySelector(".animal-grid");t.innerHTML="",Object.entries(ANIMALS).forEach((([e,i])=>{const n=document.createElement("div");n.className="animal-card"+(Progress.isUnlocked(e)?"":" locked"),e===this.currentAnimal&&n.classList.add("selected"),n.innerHTML=`\n                <img src="${i.sprite}" alt="${i.name}" class="animal-icon">\n                <div class="animal-name">${i.name}</div>\n                <div class="animal-stats">\n                    Level ${i.level}<br>\n                    Finds: ${Progress.getFinds(e)}\n                </div>\n            `,Progress.isUnlocked(e)&&n.addEventListener("click",(()=>this.selectAnimal(e))),t.appendChild(n)})),this.updateUnlockProgress()}updateAnimalGrid(){document.querySelector(".animal-grid").querySelectorAll(".animal-card").forEach((t=>{const e=t.querySelector(".animal-name").textContent.toLowerCase();t.className="animal-card"+(Progress.isUnlocked(e)?"":" locked"),e===this.currentAnimal&&t.classList.add("selected");t.querySelector(".animal-stats").innerHTML=`\n                Level ${ANIMALS[e].level}<br>\n                Finds: ${Progress.getFinds(e)}\n            `})),this.updateUnlockProgress()}updateUnlockProgress(){const t=Progress.getNextUnlock(),e=document.getElementById("next-unlock"),i=document.getElementById("unlock-progress-fill");if(t){e.textContent=`Find ${t.previous} ${t.required-t.current} more times`;const n=t.current/t.required*100;i.style.width=`${n}%`}else e.textContent="All animals unlocked!",i.style.width="100%"}selectAnimal(t){if(ANIMALS[t]){this.currentAnimal=t,localStorage.setItem("currentAnimal",t);try{if(!ANIMALS[t].sprite)throw new Error(`Sprite not found for ${t}`);this.cow.src=ANIMALS[t].sprite,this.cow.onerror=()=>{console.error(`Failed to load sprite for ${t}`),this.cow.src="animals/cow/animal.png"},document.getElementById("animal-name").textContent=ANIMALS[t].name,document.getElementById("current-level").textContent=ANIMALS[t].level,this.audioContext&&this.loadAnimalSounds(t).catch((t=>{console.error("Error loading animal sounds:",t)})),this.startGame()}catch(t){console.error("Error selecting animal:",t),this.currentAnimal="cow",this.cow.src="animals/cow/animal.png"}}else console.error(`Invalid animal selected: ${t}`)}}window.addEventListener("load",(()=>{new CowGame}));